{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-trivia-react-redux/src/components/pages/Ranking/Ranking.jsx\";\nimport React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './ranking.css';\n\nclass Ranking extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/');\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    const sortedLocalStorage = Object.values(localStorage).sort((a, b) => JSON.parse(b).score - JSON.parse(a).score);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"containerMenuRanking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"ranking-title\",\n      className: \"rankingName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, \"RANKING\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      type: \"button\",\n      \"data-testid\": \"btn-go-home\",\n      className: \"buttonHome\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, \"Go home\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"containerUsers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, sortedLocalStorage.map((score, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://www.gravatar.com/avatar/${md5(JSON.parse(score).email).toString()}`,\n      alt: \"player\",\n      className: \"playerPicture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"playerScore\",\n      \"data-testid\": `player-score-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, JSON.parse(score).score), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `player-name-${index}`,\n      className: \"playerName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, JSON.parse(score).name)), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  player: state.player\n});\n\nconst mapDispatchToProps = () => ({});\n\nRanking.propTypes = {\n  history: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Ranking);","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-trivia-react-redux/src/components/pages/Ranking/Ranking.jsx"],"names":["React","Component","md5","PropTypes","connect","Ranking","constructor","handleClick","history","props","push","state","render","sortedLocalStorage","Object","values","localStorage","sort","a","b","JSON","parse","score","map","index","email","toString","name","mapStateToProps","player","mapDispatchToProps","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './ranking.css';\n\nclass Ranking extends Component {\n  constructor() {\n    super();\n    this.state = {\n    };\n  }\n\n  handleClick = () => {\n    const { history } = this.props;\n    history.push('/');\n  };\n\n  render() {\n    const sortedLocalStorage = Object.values(localStorage)\n      .sort((a, b) => JSON.parse(b).score - JSON.parse(a).score);\n    return (\n      <div>\n        <div className=\"containerMenuRanking\">\n          <div\n            data-testid=\"ranking-title\"\n            className=\"rankingName\"\n          >\n            RANKING\n          </div>\n          <button\n            onClick={ this.handleClick }\n            type=\"button\"\n            data-testid=\"btn-go-home\"\n            className=\"buttonHome\"\n          >\n            Go home\n          </button>\n        </div>\n        <div className=\"containerUsers\">\n          <ol>\n            {sortedLocalStorage.map((score, index) => (\n              <div key={ index }>\n                <div className=\"Users\">\n                  <img\n                    src={ `https://www.gravatar.com/avatar/${md5(JSON.parse(score).email).toString()}` }\n                    alt=\"player\"\n                    className=\"playerPicture\"\n                  />\n                  <p\n                    className=\"playerScore\"\n                    data-testid={ `player-score-${index}` }\n                  >\n                    {JSON.parse(score).score}\n                  </p>\n                  <p\n                    data-testid={ `player-name-${index}` }\n                    className=\"playerName\"\n                  >\n                    { JSON.parse(score).name }\n                  </p>\n                </div>\n                <hr />\n              </div>\n\n            ))}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n});\n\nconst mapDispatchToProps = () => ({\n});\n\nRanking.propTypes = {\n  history: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ranking);\n"]},"metadata":{},"sourceType":"module"}