{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-trivia-react-redux/src/components/pages/Header.jsx\";\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.tokenExpire = () => {\n      const expire = 1800000;\n      setInterval(async () => {\n        const {\n          saveToken\n        } = this.props;\n        const curr = 'https://opentdb.com/api_token.php?command=request';\n        const response = await fetch(curr);\n        const json = await response.json();\n        localStorage.setItem('token', JSON.stringify(json.token));\n        this.setState({\n          token: json.token\n        }, () => {\n          saveToken(this.state);\n        });\n      }, expire);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    const {\n      player,\n      score\n    } = this.props;\n    const MD5 = md5(player.email).toString();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Player:\", ' ', player.name), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, score), /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://www.gravatar.com/avatar/${MD5}`,\n      \"data-testid\": \"header-profile-picture\",\n      alt: \"avatarPlayer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  player: state.player,\n  score: state.player.score\n});\n\nHeader.propTypes = {\n  avatar: PropTypes.function,\n  name: PropTypes.function\n}.isRequired;\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-trivia-react-redux/src/components/pages/Header.jsx"],"names":["md5","PropTypes","React","Component","connect","Header","constructor","tokenExpire","expire","setInterval","saveToken","props","curr","response","fetch","json","localStorage","setItem","JSON","stringify","token","setState","state","render","player","score","MD5","email","toString","name","mapStateToProps","propTypes","avatar","function","isRequired"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,eAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC7BG,EAAAA,WAAW,GAAG;AACZ;;AADY,SAMdC,WANc,GAMA,MAAM;AAClB,YAAMC,MAAM,GAAG,OAAf;AACAC,MAAAA,WAAW,CAAC,YAAY;AACtB,cAAM;AAAEC,UAAAA;AAAF,YAAgB,KAAKC,KAA3B;AACF,cAAMC,IAAI,GAAG,mDAAb;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,IAAD,CAA5B;AACA,cAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,IAAI,CAACK,KAApB,CAA9B;AAEA,aAAKC,QAAL,CAAc;AACZD,UAAAA,KAAK,EAAEL,IAAI,CAACK;AADA,SAAd,EAEG,MAAM;AACPV,UAAAA,SAAS,CAAC,KAAKY,KAAN,CAAT;AACD,SAJD;AAKC,OAZU,EAYRd,MAZQ,CAAX;AAaD,KArBa;;AAEZ,SAAKc,KAAL,GAAa,EAAb;AAED;;AAmBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAoB,KAAKd,KAA/B;AACA,UAAMe,GAAG,GAAG1B,GAAG,CAACwB,MAAM,CAACG,KAAR,CAAH,CAAkBC,QAAlB,EAAZ;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,qBAAY,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEG,GAFH,EAGGJ,MAAM,CAACK,IAHV,CADF,eAME;AAAG,qBAAY,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,KADH,CANF,eASE;AACE,MAAA,GAAG,EAAI,mCAAkCC,GAAI,EAD/C;AAEE,qBAAY,wBAFd;AAGE,MAAA,GAAG,EAAC,cAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAkBD;;AA9C4B;;AAiD/B,MAAMI,eAAe,GAAIR,KAAD,KAAY;AAClCE,EAAAA,MAAM,EAAEF,KAAK,CAACE,MADoB;AAElCC,EAAAA,KAAK,EAAEH,KAAK,CAACE,MAAN,CAAaC;AAFc,CAAZ,CAAxB;;AAKApB,MAAM,CAAC0B,SAAP,GAAmB;AACjBC,EAAAA,MAAM,EAAE/B,SAAS,CAACgC,QADD;AAEjBJ,EAAAA,IAAI,EAAE5B,SAAS,CAACgC;AAFC,EAGjBC,UAHF;AAKA,eAAe9B,OAAO,CAAC0B,eAAD,CAAP,CAAyBzB,MAAzB,CAAf","sourcesContent":["import md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n    };\n  }\n\n  tokenExpire = () => {\n    const expire = 1800000;\n    setInterval(async () => {\n      const { saveToken } = this.props;\n    const curr = 'https://opentdb.com/api_token.php?command=request';\n    const response = await fetch(curr);\n    const json = await response.json();\n    localStorage.setItem('token', JSON.stringify(json.token));\n\n    this.setState({\n      token: json.token,\n    }, () => {\n      saveToken(this.state);\n    });\n    }, expire);\n  }\n\n  render() {\n    const { player, score } = this.props;\n    const MD5 = md5(player.email).toString();\n\n    return (\n      <div>\n        <p data-testid=\"header-player-name\">\n          Player:\n          {' '}\n          {player.name}\n        </p>\n        <p data-testid=\"header-score\">\n          {score}\n        </p>\n        <img\n          src={ `https://www.gravatar.com/avatar/${MD5}` }\n          data-testid=\"header-profile-picture\"\n          alt=\"avatarPlayer\"\n        />\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n  score: state.player.score,\n});\n\nHeader.propTypes = {\n  avatar: PropTypes.function,\n  name: PropTypes.function,\n}.isRequired;\n\nexport default connect(mapStateToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}