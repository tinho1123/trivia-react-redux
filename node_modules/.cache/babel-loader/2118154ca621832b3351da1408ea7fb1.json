{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-trivia-react-redux/src/components/pages/Login.jsx\";\nimport PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { tokenAction } from '../../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchAPI = async () => {\n      const {\n        email\n      } = this.props;\n      const hash = md5(email).toString();\n      console.log(email);\n      console.log(hash);\n      const curr = `https://www.gravatar.com/avatar/${hash}`;\n      const response = await fetch(curr);\n      const json = await response;\n      const src = json.url;\n      this.setState({\n        src\n      });\n    };\n\n    this.state = {\n      email: '',\n      name: '',\n      token: '',\n      src: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async handleClick() {\n    const {\n      history,\n      saveToken\n    } = this.props;\n    const curr = 'https://opentdb.com/api_token.php?command=request';\n    const response = await fetch(curr);\n    const json = await response.json();\n    localStorage.setItem('token', JSON.stringify(json.token));\n    this.setState({\n      token: json.token,\n      src: src\n    });\n    history.push('/playGame');\n    saveToken(this.state);\n  }\n\n  handleChange(_ref) {\n    let {\n      target: {\n        value,\n        name\n      }\n    } = _ref;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const regexEmail = /\\S+@\\S+\\.\\S+/;\n    const {\n      email,\n      name\n    } = this.state;\n    const {\n      history\n    } = this.props;\n    const validEmail = regexEmail.test(email);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Email:\", /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      value: email,\n      name: \"email\",\n      type: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Nome:\", /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      value: name,\n      name: \"name\",\n      type: \"text\",\n      \"data-testid\": \"input-player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: !validEmail || name.length === 0,\n      onClick: this.handleClick,\n      \"data-testid\": \"btn-play\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Jogar\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        history.push('/config');\n      },\n      \"data-testid\": \"btn-settings\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"Configurar\"));\n  }\n\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }),\n  saveToken: PropTypes.func\n}.isRequired;\n\nconst mapDispatchToProps = dispacth => ({\n  saveToken: payload => dispacth(tokenAction(payload))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-trivia-react-redux/src/components/pages/Login.jsx"],"names":["PropTypes","md5","React","connect","tokenAction","Login","Component","constructor","fetchAPI","email","props","hash","toString","console","log","curr","response","fetch","json","src","url","setState","state","name","token","handleChange","bind","handleClick","history","saveToken","localStorage","setItem","JSON","stringify","push","target","value","render","regexEmail","validEmail","test","length","propTypes","shape","func","isRequired","mapDispatchToProps","dispacth","payload"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport md5 from 'crypto-js/md5';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { tokenAction } from '../../actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      token: '',\n      src: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  fetchAPI = async () => {\n    const { email } = this.props;\n    const hash = md5(email).toString();\n    console.log(email);\n    console.log(hash);\n    const curr = `https://www.gravatar.com/avatar/${hash}`;\n    const response = await fetch(curr);\n    const json = await response;\n    const src = json.url;\n    this.setState({ src });\n  }\n\n  async handleClick() {\n    const { history, saveToken } = this.props;\n    const curr = 'https://opentdb.com/api_token.php?command=request';\n    const response = await fetch(curr);\n    const json = await response.json();\n    localStorage.setItem('token', JSON.stringify(json.token));\n\n    this.setState({\n      token: json.token,\n      src: src\n    });\n    history.push('/playGame');\n    saveToken(this.state);\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const regexEmail = /\\S+@\\S+\\.\\S+/;\n    const { email, name } = this.state;\n    const { history } = this.props;\n    const validEmail = regexEmail.test(email);\n    return (\n      <div>\n        <label\n          htmlFor=\"login\"\n        >\n          Email:\n          <input\n            onChange={ this.handleChange }\n            value={ email }\n            name=\"email\"\n            type=\"email\"\n            data-testid=\"input-gravatar-email\"\n          />\n        </label>\n        <label\n          htmlFor=\"name\"\n        >\n          Nome:\n          <input\n            onChange={ this.handleChange }\n            value={ name }\n            name=\"name\"\n            type=\"text\"\n            data-testid=\"input-player-name\"\n          />\n        </label>\n        <button\n          disabled={ (!validEmail || name.length === 0) }\n          onClick={ this.handleClick }\n          data-testid=\"btn-play\"\n          type=\"button\"\n        >\n          Jogar\n        </button>\n        <button\n          onClick={ () => { history.push('/config'); } }\n          data-testid=\"btn-settings\"\n          type=\"button\"\n        >\n          Configurar\n        </button>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  saveToken: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispacth) => ({\n  saveToken: (payload) => dispacth(tokenAction(payload)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}