{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-trivia-react-redux/src/components/pages/Login/Login.jsx\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { playerAction, tokenAction, setScore } from '../../../actions';\nimport { Container, Input, Buttons, Body, Image } from './Styles';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      token: '',\n      questions: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async handleClick() {\n    const {\n      history,\n      saveToken,\n      savePlayer\n    } = this.props;\n    const curr = 'https://opentdb.com/api_token.php?command=request';\n    const response = await fetch(curr);\n    const json = await response.json();\n    localStorage.setItem(localStorage.length + 1, JSON.stringify(json.token));\n    this.setState({\n      token: json.token\n    }, () => {\n      savePlayer(this.state);\n      saveToken(this.state);\n    });\n    history.push('/playGame');\n  }\n\n  handleChange(_ref) {\n    let {\n      target: {\n        value,\n        name\n      }\n    } = _ref;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const regexEmail = /\\S+@\\S+\\.\\S+/;\n    const {\n      email,\n      name\n    } = this.state;\n    const {\n      history\n    } = this.props;\n    const validEmail = regexEmail.test(email);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Email:\", /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: email,\n      name: \"email\",\n      type: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Nome:\", /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      value: name,\n      name: \"name\",\n      type: \"text\",\n      \"data-testid\": \"input-player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Buttons, {\n      disabled: !validEmail || name.length === 0,\n      onClick: this.handleClick,\n      \"data-testid\": \"btn-play\",\n      type: \"button\",\n      onMouseOver: () => {\n        som.pause();\n        som.currentTime = 0;\n        som.play();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Jogar\"), /*#__PURE__*/React.createElement(Buttons, {\n      onClick: () => {\n        history.push('/config');\n      },\n      \"data-testid\": \"btn-settings\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Configurar\")));\n  }\n\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }),\n  saveToken: PropTypes.func\n}.isRequired;\n\nconst mapDispatchToProps = dispacth => ({\n  savePlayer: payload => dispacth(playerAction(payload)),\n  saveToken: payload => dispacth(tokenAction(payload)),\n  setScores: payload => dispacth(setScore(payload))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-trivia-react-redux/src/components/pages/Login/Login.jsx"],"names":["PropTypes","React","connect","playerAction","tokenAction","setScore","Container","Input","Buttons","Body","Image","Login","Component","constructor","state","email","name","token","questions","handleChange","bind","handleClick","history","saveToken","savePlayer","props","curr","response","fetch","json","localStorage","setItem","length","JSON","stringify","setState","push","target","value","render","regexEmail","validEmail","test","som","pause","currentTime","play","propTypes","shape","func","isRequired","mapDispatchToProps","dispacth","payload","setScores"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { playerAction, tokenAction, setScore } from '../../../actions';\nimport { Container, Input, Buttons, Body, Image } from './Styles';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      name: '',\n      token: '',\n      questions: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async handleClick() {\n    const { history, saveToken, savePlayer } = this.props;\n    const curr = 'https://opentdb.com/api_token.php?command=request';\n    const response = await fetch(curr);\n    const json = await response.json();\n    localStorage.setItem(localStorage.length + 1, JSON.stringify(json.token));\n    this.setState({\n      token: json.token,\n    }, () => {\n      savePlayer(this.state);\n      saveToken(this.state);\n    });\n    history.push('/playGame');\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const regexEmail = /\\S+@\\S+\\.\\S+/;\n    const { email, name } = this.state;\n    const { history } = this.props;\n    const validEmail = regexEmail.test(email);\n    return (\n      <div>\n        <Container>\n          <Body />\n          <label\n            htmlFor=\"email\"\n          >\n            Email:\n            <Input\n              onChange={ this.handleChange }\n              value={ email }\n              name=\"email\"\n              type=\"email\"\n              data-testid=\"input-gravatar-email\"\n            />\n          </label>\n          <label\n            htmlFor=\"name\"\n          >\n            Nome:\n            <Input\n              onChange={ this.handleChange }\n              value={ name }\n              name=\"name\"\n              type=\"text\"\n              data-testid=\"input-player-name\"\n            />\n          </label>\n          <Buttons\n            disabled={ (!validEmail || name.length === 0) }\n            onClick={ this.handleClick }\n            data-testid=\"btn-play\"\n            type=\"button\"\n            onMouseOver={ () => {\n              som.pause();\n              som.currentTime = 0;\n              som.play();\n            } }\n          >\n            Jogar\n          </Buttons>\n          <Buttons\n            onClick={ () => { history.push('/config'); } }\n            data-testid=\"btn-settings\"\n            type=\"button\"\n          >\n            Configurar\n          </Buttons>\n        </Container>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  saveToken: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispacth) => ({\n  savePlayer: (payload) => dispacth(playerAction(payload)),\n  saveToken: (payload) => dispacth(tokenAction(payload)),\n  setScores: (payload) => dispacth(setScore(payload)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}