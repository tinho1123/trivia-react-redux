{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-trivia-react-redux/src/components/pages/Feedback.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5'; // import Header from './Header';\n\nclass Feedback extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleClick = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/');\n    };\n\n    this.handleClick2 = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/ranking');\n    };\n  }\n\n  render() {\n    const {\n      score,\n      assertion,\n      player\n    } = this.props;\n    const MD5 = md5(player.email).toString();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"feedback-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, player.name), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, score), /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://www.gravatar.com/avatar/${MD5}`,\n      \"data-testid\": \"header-profile-picture\",\n      alt: \"avatarPlayer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"feedback-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, assertion < +'3' ? 'Could be better...' : 'Well Done!'), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      type: \"button\",\n      \"data-testid\": \"btn-play-again\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Play Again\"), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, score), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"feedback-total-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, assertion), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick2,\n      type: \"button\",\n      \"data-testid\": \"btn-ranking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Ranking\"));\n  }\n\n}\n\nFeedback.propTypes = {\n  history: PropTypes.func.isRequired,\n  score: PropTypes.func.isRequired,\n  assertion: PropTypes.func.isRequired,\n  player: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  player: state.player,\n  score: state.player.score,\n  assertion: state.player.assertions\n});\n\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-trivia-react-redux/src/components/pages/Feedback.jsx"],"names":["React","Component","PropTypes","connect","md5","Feedback","handleClick","history","props","push","handleClick2","render","score","assertion","player","MD5","email","toString","name","propTypes","func","isRequired","mapStateToProps","state","assertions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,eAAhB,C,CAEA;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAC/BK,WAD+B,GACjB,MAAM;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKC,KAAzB;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,GAAb;AACD,KAJ8B;;AAAA,SAM/BC,YAN+B,GAMhB,MAAM;AACnB,YAAM;AAAEH,QAAAA;AAAF,UAAc,KAAKC,KAAzB;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,UAAb;AACD,KAT8B;AAAA;;AAW/BE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA;AAApB,QAA+B,KAAKN,KAA1C;AACA,UAAMO,GAAG,GAAGX,GAAG,CAACU,MAAM,CAACE,KAAR,CAAH,CAAkBC,QAAlB,EAAZ;AACA,wBACE;AACE,qBAAY,eADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAG,qBAAY,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIH,MAAM,CAACI,IADX,CAHF,eAME;AAAG,qBAAY,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,KADH,CANF,eASE;AACE,MAAA,GAAG,EAAI,mCAAkCG,GAAI,EAD/C;AAEE,qBAAY,wBAFd;AAGE,MAAA,GAAG,EAAC,cAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,eAgBE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,SAAS,GAAG,CAAC,GAAb,GACG,oBADH,GAEG,YAHN,CAhBF,eAsBE;AACE,MAAA,OAAO,EAAG,KAAKP,WADjB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,qBAAY,gBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBF,eA8BE;AACE,qBAAY,sBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGIM,KAHJ,CA9BF,eAoCE;AACE,qBAAY,yBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGIC,SAHJ,CApCF,eA0CE;AACE,MAAA,OAAO,EAAG,KAAKH,YADjB;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,qBAAY,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA1CF,CADF;AAoDD;;AAlE8B;;AAoEjCL,QAAQ,CAACc,SAAT,GAAqB;AACnBZ,EAAAA,OAAO,EAAEL,SAAS,CAACkB,IAAV,CAAeC,UADL;AAEnBT,EAAAA,KAAK,EAAEV,SAAS,CAACkB,IAAV,CAAeC,UAFH;AAGnBR,EAAAA,SAAS,EAAEX,SAAS,CAACkB,IAAV,CAAeC,UAHP;AAInBP,EAAAA,MAAM,EAAEZ,SAAS,CAACkB,IAAV,CAAeC;AAJJ,CAArB;;AAOA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,MAAM,EAAES,KAAK,CAACT,MADoB;AAElCF,EAAAA,KAAK,EAAEW,KAAK,CAACT,MAAN,CAAaF,KAFc;AAGlCC,EAAAA,SAAS,EAAEU,KAAK,CAACT,MAAN,CAAaU;AAHU,CAAZ,CAAxB;;AAMA,eAAerB,OAAO,CAACmB,eAAD,CAAP,CAAyBjB,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\n\n// import Header from './Header';\n\nclass Feedback extends Component {\n  handleClick = () => {\n    const { history } = this.props;\n    history.push('/');\n  };\n\n  handleClick2 = () => {\n    const { history } = this.props;\n    history.push('/ranking');\n  }\n\n  render() {\n    const { score, assertion, player } = this.props;\n    const MD5 = md5(player.email).toString();\n    return (\n      <div\n        data-testid=\"feedback-text\"\n      >\n        <p data-testid=\"header-player-name\">\n          { player.name }\n        </p>\n        <p data-testid=\"header-score\">\n          {score}\n        </p>\n        <img\n          src={ `https://www.gravatar.com/avatar/${MD5}` }\n          data-testid=\"header-profile-picture\"\n          alt=\"avatarPlayer\"\n        />\n\n        {/* <Header /> */}\n        <p data-testid=\"feedback-text\">\n          {assertion < +'3'\n            ? 'Could be better...'\n            : 'Well Done!'}\n\n        </p>\n        <button\n          onClick={ this.handleClick }\n          type=\"button\"\n          data-testid=\"btn-play-again\"\n        >\n          Play Again\n        </button>\n\n        <p\n          data-testid=\"feedback-total-score\"\n        >\n          { score }\n        </p>\n\n        <p\n          data-testid=\"feedback-total-question\"\n        >\n          { assertion }\n        </p>\n\n        <button\n          onClick={ this.handleClick2 }\n          type=\"button\"\n          data-testid=\"btn-ranking\"\n        >\n          Ranking\n        </button>\n      </div>\n    );\n  }\n}\nFeedback.propTypes = {\n  history: PropTypes.func.isRequired,\n  score: PropTypes.func.isRequired,\n  assertion: PropTypes.func.isRequired,\n  player: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n  score: state.player.score,\n  assertion: state.player.assertions,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}